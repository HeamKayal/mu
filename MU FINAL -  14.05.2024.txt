<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Measurement Uncertainty Report Generator</title>
  <style>
    body { font-family: Arial, sans-serif; margin: 20px; line-height: 1.6; }
    label, textarea, input, button { display: block; margin-top: 10px; }
    button { width: auto; padding: 8px 16px; margin-right: 10px; background: #4CAF50; color: white; border: none; cursor: pointer; border-radius: 4px; }
    button:hover { background: #45a049; }
    h2, h3, h4 { margin-top: 30px; color: #2c3e50; }
    table { border-collapse: collapse; margin-top: 15px; width: 100%; font-size: 0.9em; }
    caption { caption-side: top; font-weight: bold; margin-bottom: 8px; text-align: left; }
    th, td { border: 1px solid #ddd; padding: 8px; text-align: center; }
    th { background-color: #f8f9fa; font-weight: bold; }
    .left-align { text-align: left; }
    .section { margin-bottom: 30px; padding-bottom: 20px; border-bottom: 1px solid #eee; }
    .header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px; }
    .header img { max-height: 80px; max-width: 200px; }
    .inputs { display: grid; grid-template-columns: repeat(5, 1fr); gap: 10px; }
    .subtitle { font-style: italic; font-size: 0.85em; color: #666; margin: 4px 0 12px; }
    .typeb-input { width: 100px; }
    .footer { display: flex; justify-content: space-between; margin-top: 30px; }
    .footer div { width: 45%; }
    .buttons { margin: 20px 0; display: flex; }
    .signature-line { border-top: 1px solid #000; width: 200px; margin-top: 50px; }
    .report-title { text-align: center; margin: 20px 0; color: #2c3e50; }
    .summary-box { background: #f8f9fa; padding: 15px; border-left: 4px solid #4CAF50; margin: 20px 0; }
    @media print {
      #inputSections { display: none; }
      button { display: none; }
      body { margin: 0; padding: 10px; font-size: 12pt; }
      .section { page-break-inside: avoid; }
      #reportOutput { display: block !important; }
    }
  </style>
</head>
<body>

  <!-- Input Sections -->
  <div id="inputSections">
    <!-- Header Inputs -->
    <div class="header section">
      <div>
        <label><strong>Company Name:</strong></label>
        <input type="text" id="company" placeholder="Enter company name" style="width: 300px;">
        <label><strong>Prepared By:</strong></label>
        <input type="text" id="preparedBy" placeholder="Analyst Name" style="width: 300px;">
        <label><strong>Approved By:</strong></label>
        <input type="text" id="approvedBy" placeholder="Quality Manager" style="width: 300px;">
      </div>
      <div>
        <label><strong>Upload Logo:</strong></label>
        <input type="file" id="logoInput" accept="image/*">
      </div>
    </div>

    <!-- Report Title -->
    <div class="section">
      <h1 class="report-title">Measurement Uncertainty Report</h1>
    </div>

    <!-- Parameter and Sample Info -->
    <div class="section">
      <h3>1. Test Information</h3>
      <label>Parameter:</label>
      <input type="text" id="parameter" value="Chloride" style="width: 300px;">
      <label>Sample Type:</label>
      <input type="text" id="sampleType" value="Construction Water Samples" style="width: 300px;">
    </div>

    <!-- Scope -->
    <div class="section">
      <h3>2. Scope</h3>
      <p>This report estimates the measurement uncertainty for the determination of 
         <strong id="scopeParam">Chloride</strong> in 
         <strong id="scopeSample">Construction Water Samples</strong> using the method described below.</p>
    </div>

    <!-- Test Method -->
    <div class="section">
      <h3>3. Test Method</h3>
      <label>Method Name/Reference:</label>
      <input type="text" id="method" placeholder="Enter measurement method" style="width: 100%;">
      <label>Measurement Procedure:</label>
      <textarea id="procedure" rows="3" placeholder="Enter detailed measurement procedure" style="width: 100%;"></textarea>
      <label>Calculation Formula:</label>
      <textarea id="formula" rows="2" placeholder="Enter calculation formula (e.g., H₂O or 10²)" style="width: 100%;"></textarea>
    </div>

    <!-- Type A: Repeatability Inputs -->
    <div class="section">
      <h3>4. Type A Uncertainty (Repeatability)</h3>
      <p>Based on repeatability study (n = 5).</p>
      <label>Enter 5 Repeatability Values:</label>
      <div class="inputs">
        <input type="number" id="val1" placeholder="X₁" step="0.0001">
        <input type="number" id="val2" placeholder="X₂" step="0.0001">
        <input type="number" id="val3" placeholder="X₃" step="0.0001">
        <input type="number" id="val4" placeholder="X₄" step="0.0001">
        <input type="number" id="val5" placeholder="X₅" step="0.0001">
      </div>
    </div>

    <!-- Type B: Sources Inputs -->
    <div class="section">
      <h3>5. Type B Uncertainty Sources</h3>
      
      <h4>5.1 Weighing Balance</h4>
      <label>Certificate Uncertainty (Linearity):</label>
      <input type="number" id="ubLinearity" class="typeb-input" placeholder="e.g. 0.002" step="0.0001" value="0.002">
      <p class="subtitle">Divided by 2 for standard uncertainty (rectangular distribution)</p>
      <label>Balance Repeatability:</label>
      <input type="number" id="ubRepBal" class="typeb-input" placeholder="e.g. 0.001" step="0.0001" value="0.001">

      <h4>5.2 Chemical Standards</h4>
      <label>Purity of Standard (NaCl):</label>
      <input type="number" id="ubPur" class="typeb-input" placeholder="e.g. 0.001" step="0.0001" value="0.001">
      <label>Mass Uncertainty (g):</label>
      <input type="number" id="ubMass" class="typeb-input" placeholder="e.g. 0.0005" step="0.0001" value="0.0005">

      <h4>5.3 Glassware Volumes</h4>
      <label>10 mL Pipette Calibration (mL):</label>
      <input type="number" id="ubVolCal" class="typeb-input" placeholder="e.g. 0.005" step="0.0001" value="0.005">
      <p class="subtitle">Divided by √6 for standard uncertainty (triangular distribution)</p>
      <label>Pipette Volume Used (mL):</label>
      <input type="number" id="pipetteVol" class="typeb-input" placeholder="e.g. 10" step="0.1" value="10">
      
      <label>50 mL Burette Calibration (mL):</label>
      <input type="number" id="ubBuretteCal" class="typeb-input" placeholder="e.g. 0.01" step="0.0001" value="0.01">
      <p class="subtitle">Divided by √6 for standard uncertainty (triangular distribution)</p>
      <label>Burette Volume Used (mL):</label>
      <input type="number" id="buretteVol" class="typeb-input" placeholder="e.g. 50" step="0.1" value="50">
    </div>

    <!-- Generate Button -->
    <div class="buttons">
      <button onclick="generateReport()">Generate Full Report</button>
      <button onclick="window.print()">Print Report</button>
      <button onclick="exportToExcel()">Export to Excel</button>
    </div>
  </div>

  <!-- Report Output Sections -->
  <div id="reportOutput" style="display: none;">
    <!-- Company Header -->
    <div class="header section">
      <h2 id="reportCompany"></h2>
      <div id="reportLogo"></div>
    </div>
    
    <!-- Report Title -->
    <div class="section">
      <h1 class="report-title">Measurement Uncertainty Report</h1>
      <p><strong>Date:</strong> <span id="reportDate"></span></p>
    </div>
    
    <!-- Test Information -->
    <div class="section">
      <h3>1. Test Information</h3>
      <p><strong>Parameter:</strong> <span id="reportParam"></span></p>
      <p><strong>Sample Type:</strong> <span id="reportSample"></span></p>
    </div>
    
    <!-- Scope -->
    <div class="section">
      <h3>2. Scope</h3>
      <p>This report estimates the measurement uncertainty for the determination of 
         <strong id="reportScopeParam"></strong> in 
         <strong id="reportScopeSample"></strong> using the method described below.</p>
    </div>
    
    <!-- Test Method -->
    <div class="section">
      <h3>3. Test Method</h3>
      <p><strong>Method Name/Reference:</strong> <span id="reportMethod"></span></p>
      <p><strong>Measurement Procedure:</strong></p>
      <div style="white-space: pre-line;" id="reportProcedure"></div>
      <p><strong>Calculation Formula:</strong> <span id="reportFormula"></span></p>
    </div>
    
    <!-- Type A Results -->
    <div class="section">
      <h3>4. Type A Uncertainty Evaluation</h3>
      <p>Repeatability study based on <span id="reportN"></span> measurements:</p>
      <table id="typeATable">
        <thead>
          <tr>
            <th>Measurement</th>
            <th>Value (X<sub>i</sub>)</th>
            <th>Deviation (X<sub>i</sub> - X̄)</th>
          </tr>
        </thead>
        <tbody></tbody>
        <tfoot>
          <tr>
            <th>Mean (X̄)</th>
            <td id="reportMean"></td>
            <td>-</td>
          </tr>
          <tr>
            <th>Standard Deviation (s)</th>
            <td id="reportSD"></td>
            <td>-</td>
          </tr>
          <tr>
            <th>Standard Uncertainty (u<sub>A</sub>)</th>
            <td id="reportUA"></td>
            <td>-</td>
          </tr>
        </tfoot>
      </table>
    </div>
    
    <!-- Type B Results -->
    <div class="section">
      <h3>5. Type B Uncertainty Evaluation</h3>
      <table id="typeBTable">
        <thead>
          <tr>
            <th>Source</th>
            <th>Value</th>
            <th>Standard Uncertainty</th>
            <th>Distribution</th>
            <th>Notes</th>
          </tr>
        </thead>
        <tbody></tbody>
      </table>
    </div>
    
    <!-- Uncertainty Budget -->
    <div class="section">
      <h3>6. Uncertainty Budget</h3>
      <table id="budgetTable">
        <thead>
          <tr>
            <th>Source</th>
            <th>Type</th>
            <th>Value</th>
            <th>Standard Uncertainty</th>
            <th>Relative Uncertainty</th>
            <th>Sensitivity Coefficient</th>
            <th>Contribution</th>
          </tr>
        </thead>
        <tbody></tbody>
      </table>
    </div>
    
    <!-- Combined Uncertainty -->
    <div class="section">
      <h3>7. Combined Uncertainty</h3>
      <div class="summary-box">
        <p><strong>Combined Standard Uncertainty (u<sub>c</sub>):</strong> <span id="reportUC"></span></p>
        <p><strong>Expanded Uncertainty (U) at k=2:</strong> <span id="reportUExp"></span></p>
        <p><strong>Relative Expanded Uncertainty:</strong> <span id="reportURel"></span></p>
      </div>
    </div>
    
    <!-- Conclusion -->
    <div class="section">
      <h3>8. Conclusion</h3>
      <p>The expanded uncertainty for the determination of <span id="reportFinalParam"></span> in <span id="reportFinalSample"></span> 
         is <strong><span id="reportFinalU"></span></strong> (k=2), corresponding to a coverage factor of 2 
         which provides a confidence level of approximately 95%.</p>
      <p>The measurement result is expressed as: <strong><span id="reportMeanResult"></span> ± <span id="reportFinalU2"></span></strong></p>
    </div>
    
    <!-- Signatures -->
    <div class="footer section">
      <div>
        <p><strong>Prepared by:</strong></p>
        <div class="signature-line"></div>
        <p id="reportPreparedBy"></p>
        <p><em>Position/Title</em></p>
        <p><em>Date: <span id="reportDate1"></span></em></p>
      </div>
      <div>
        <p><strong>Approved by:</strong></p>
        <div class="signature-line"></div>
        <p id="reportApprovedBy"></p>
        <p><em>Position/Title</em></p>
        <p><em>Date: <span id="reportDate2"></span></em></p>
      </div>
    </div>
  </div>

<script>
  // Global variables to store calculated values
  let reportData = {
    company: "",
    logo: "",
    parameter: "",
    sampleType: "",
    method: "",
    procedure: "",
    formula: "",
    typeA: { values: [], mean: 0, sd: 0, ua: 0 },
    typeB: [],
    combined: { uc: 0, uexp: 0, urel: 0 },
    preparedBy: "",
    approvedBy: "",
    date: new Date().toLocaleDateString()
  };

  // Handle logo upload
  document.getElementById('logoInput').addEventListener('change', function(e) {
    const reader = new FileReader();
    reader.onload = function() {
      reportData.logo = reader.result;
    };
    reader.readAsDataURL(e.target.files[0]);
  });

  // Update scope parameters when inputs change
  document.getElementById('parameter').addEventListener('input', function() {
    document.getElementById('scopeParam').textContent = this.value;
  });
  
  document.getElementById('sampleType').addEventListener('input', function() {
    document.getElementById('scopeSample').textContent = this.value;
  });

  // Main report generation function
  function generateReport() {
    // Collect basic information
    reportData.company = document.getElementById("company").value || "Laboratory Name";
    reportData.parameter = document.getElementById("parameter").value;
    reportData.sampleType = document.getElementById("sampleType").value;
    reportData.method = document.getElementById("method").value || "Not specified";
    reportData.procedure = document.getElementById("procedure").value || "Not specified";
    reportData.formula = document.getElementById("formula").value || "Not specified";
    reportData.preparedBy = document.getElementById("preparedBy").value || "Analyst Name";
    reportData.approvedBy = document.getElementById("approvedBy").value || "Quality Manager";
    
    // Calculate Type A uncertainty
    const values = [1,2,3,4,5].map(i => {
      const val = document.getElementById("val"+i).value;
      return val ? parseFloat(val) : NaN;
    }).filter(x => !isNaN(x));
    
    if (values.length < 2) {
      alert("Please enter at least two valid repeatability values");
      return;
    }
    
    const n = values.length;
    const mean = values.reduce((a, b) => a + b, 0) / n;
    const sumSq = values.map(v => Math.pow(v - mean, 2)).reduce((a, b) => a + b, 0);
    const sd = Math.sqrt(sumSq / (n - 1));
    const ua = sd / Math.sqrt(n);
    
    reportData.typeA = {
      values: values,
      mean: mean,
      sd: sd,
      ua: ua
    };
    
    // Calculate Type B uncertainties
    const lin = parseFloat(document.getElementById("ubLinearity").value) || 0;
    const repBal = parseFloat(document.getElementById("ubRepBal").value) || 0;
    const ubLin = lin / 2; // Rectangular distribution
    
    const ubPur = parseFloat(document.getElementById("ubPur").value) || 0;
    const ubMass = parseFloat(document.getElementById("ubMass").value) || 0;
    
    const pipCal = (parseFloat(document.getElementById("ubVolCal").value) || 0) / Math.sqrt(6); // Triangular distribution
    const pipVol = parseFloat(document.getElementById("pipetteVol").value) || 10;
    const pipTemp = pipVol * 2.1e-4 / Math.sqrt(3); // Rectangular distribution
    const ubPip = Math.sqrt(Math.pow(pipCal, 2) + Math.pow(pipTemp, 2));
    
    const burCal = (parseFloat(document.getElementById("ubBuretteCal").value) || 0) / Math.sqrt(6); // Triangular distribution
    const burVol = parseFloat(document.getElementById("buretteVol").value) || 50;
    const burTemp = burVol * 2.1e-4 / Math.sqrt(3); // Rectangular distribution
    const ubBur = Math.sqrt(Math.pow(burCal, 2) + Math.pow(burTemp, 2));
    
    reportData.typeB = [
      { source: "Balance - Linearity", value: lin, u: ubLin, dist: "Rectangular (k=√3)", notes: "From calibration certificate" },
      { source: "Balance - Repeatability", value: repBal, u: repBal, dist: "Normal", notes: "From balance specification" },
      { source: "Purity of NaCl", value: 1, u: ubPur, dist: "Rectangular (k=√3)", notes: "From certificate of analysis" },
      { source: "Mass of NaCl", value: 1, u: ubMass, dist: "Rectangular (k=√3)", notes: "From weighing uncertainty" },
      { source: "10 mL Pipette - Calibration", value: pipVol, u: pipCal, dist: "Triangular (k=√6)", notes: "From calibration certificate" },
      { source: "10 mL Pipette - Temperature", value: pipVol, u: pipTemp, dist: "Rectangular (k=√3)", notes: "Temperature effect ±2°C" },
      { source: "50 mL Burette - Calibration", value: burVol, u: burCal, dist: "Triangular (k=√6)", notes: "From calibration certificate" },
      { source: "50 mL Burette - Temperature", value: burVol, u: burTemp, dist: "Rectangular (k=√3)", notes: "Temperature effect ±2°C" }
    ];
    
    // Calculate combined uncertainty
    const ubComponents = reportData.typeB.map(item => item.u);
    const ub = Math.sqrt(ubComponents.reduce((sum, u) => sum + Math.pow(u, 2), 0));
    const uc = Math.sqrt(Math.pow(ua, 2) + Math.pow(ub, 2));
    const uexp = 2 * uc;
    const urel = (uc / mean) * 100;
    
    reportData.combined = {
      uc: uc,
      uexp: uexp,
      urel: urel
    };
    
    // Generate the report display
    generateReportDisplay();
  }
  
  // Generate the visible report
  function generateReportDisplay() {
    // Show the report section
    document.getElementById("reportOutput").style.display = "block";
    
    // Set basic information
    document.getElementById("reportCompany").textContent = reportData.company;
    document.getElementById("reportParam").textContent = reportData.parameter;
    document.getElementById("reportSample").textContent = reportData.sampleType;
    document.getElementById("reportScopeParam").textContent = reportData.parameter;
    document.getElementById("reportScopeSample").textContent = reportData.sampleType;
    document.getElementById("reportMethod").textContent = reportData.method;
    document.getElementById("reportProcedure").textContent = reportData.procedure;
    document.getElementById("reportFormula").textContent = reportData.formula;
    document.getElementById("reportPreparedBy").textContent = reportData.preparedBy;
    document.getElementById("reportApprovedBy").textContent = reportData.approvedBy;
    document.getElementById("reportDate").textContent = reportData.date;
    document.getElementById("reportDate1").textContent = reportData.date;
    document.getElementById("reportDate2").textContent = reportData.date;
    
    // Set logo if available
    const logoContainer = document.getElementById("reportLogo");
    if (reportData.logo) {
      logoContainer.innerHTML = `<img src="${reportData.logo}" alt="Company Logo" style="max-height: 80px;">`;
    } else {
      logoContainer.innerHTML = "";
    }
    
    // Populate Type A table
    const typeATable = document.querySelector("#typeATable tbody");
    typeATable.innerHTML = reportData.typeA.values.map((val, i) => `
      <tr>
        <td>${i+1}</td>
        <td>${val.toFixed(4)}</td>
        <td>${(val - reportData.typeA.mean).toFixed(4)}</td>
      </tr>
    `).join("");
    
    document.getElementById("reportN").textContent = reportData.typeA.values.length;
    document.getElementById("reportMean").textContent = reportData.typeA.mean.toFixed(4);
    document.getElementById("reportSD").textContent = reportData.typeA.sd.toFixed(4);
    document.getElementById("reportUA").textContent = reportData.typeA.ua.toFixed(6);
    
    // Populate Type B table
    const typeBTable = document.querySelector("#typeBTable tbody");
    typeBTable.innerHTML = reportData.typeB.map(item => `
      <tr>
        <td class="left-align">${item.source}</td>
        <td>${item.value.toFixed(4)}</td>
        <td>${item.u.toFixed(6)}</td>
        <td>${item.dist}</td>
        <td class="left-align">${item.notes}</td>
      </tr>
    `).join("");
    
    // Populate Budget table
    const budgetTable = document.querySelector("#budgetTable tbody");
    let budgetRows = "";
    
    // Type A row
    budgetRows += `
      <tr>
        <td class="left-align">Repeatability</td>
        <td>A</td>
        <td>${reportData.typeA.mean.toFixed(4)}</td>
        <td>${reportData.typeA.ua.toFixed(6)}</td>
        <td>${(reportData.typeA.ua / reportData.typeA.mean).toFixed(6)}</td>
        <td>1.0</td>
        <td>${reportData.typeA.ua.toFixed(6)}</td>
      </tr>
    `;
    
    // Type B rows
    reportData.typeB.forEach(item => {
      budgetRows += `
        <tr>
          <td class="left-align">${item.source}</td>
          <td>B</td>
          <td>${item.value.toFixed(4)}</td>
          <td>${item.u.toFixed(6)}</td>
          <td>${(item.u / item.value).toFixed(6)}</td>
          <td>1.0</td>
          <td>${item.u.toFixed(6)}</td>
        </tr>
      `;
    });
    
    // Combined row
    budgetRows += `
      <tr style="font-weight: bold; background-color: #f8f9fa;">
        <td colspan="3" class="left-align">Combined Standard Uncertainty (u<sub>c</sub>)</td>
        <td>${reportData.combined.uc.toFixed(6)}</td>
        <td>${(reportData.combined.uc / reportData.typeA.mean).toFixed(6)}</td>
        <td>-</td>
        <td>-</td>
      </tr>
      <tr style="font-weight: bold; background-color: #e8f4ea;">
        <td colspan="3" class="left-align">Expanded Uncertainty (U) at k=2</td>
        <td>${reportData.combined.uexp.toFixed(6)}</td>
        <td>${(reportData.combined.urel / 100).toFixed(6)}</td>
        <td>-</td>
        <td>-</td>
      </tr>
    `;
    
    budgetTable.innerHTML = budgetRows;
    
    // Set combined uncertainty values
    document.getElementById("reportUC").textContent = reportData.combined.uc.toFixed(6);
    document.getElementById("reportUExp").textContent = `±${reportData.combined.uexp.toFixed(6)} (k=2)`;
    document.getElementById("reportURel").textContent = `${reportData.combined.urel.toFixed(2)}%`;
    
    // Set conclusion values
    document.getElementById("reportFinalParam").textContent = reportData.parameter;
    document.getElementById("reportFinalSample").textContent = reportData.sampleType;
    document.getElementById("reportFinalU").textContent = `±${reportData.combined.uexp.toFixed(6)}`;
    document.getElementById("reportMeanResult").textContent = reportData.typeA.mean.toFixed(4);
    document.getElementById("reportFinalU2").textContent = reportData.combined.uexp.toFixed(6);
    
    // Scroll to the report
    document.getElementById("reportOutput").scrollIntoView({ behavior: 'smooth' });
  }
  
  // Export to Excel function
  function exportToExcel() {
    if (!reportData.typeA.values.length) {
      alert("Please generate the report first");
      return;
    }
    
    // Create CSV content
    let csvContent = "Measurement Uncertainty Report\n\n";
    
    // Add header information
    csvContent += `Company,${reportData.company}\n`;
    csvContent += `Parameter,${reportData.parameter}\n`;
    csvContent += `Sample Type,${reportData.sampleType}\n`;
    csvContent += `Method,${reportData.method}\n`;
    csvContent += `Date,${reportData.date}\n\n`;
    
    // Add Type A data
    csvContent += "Type A Uncertainty (Repeatability)\n";
    csvContent += "Measurement,Value,Deviation\n";
    reportData.typeA.values.forEach((val, i) => {
      csvContent += `${i+1},${val.toFixed(4)},${(val - reportData.typeA.mean).toFixed(4)}\n`;
    });
    csvContent += `Mean,${reportData.typeA.mean.toFixed(4)}\n`;
    csvContent += `Standard Deviation,${reportData.typeA.sd.toFixed(4)}\n`;
    csvContent += `Standard Uncertainty (uA),${reportData.typeA.ua.toFixed(6)}\n\n`;
    
    // Add Type B data
    csvContent += "Type B Uncertainty Components\n";
    csvContent += "Source,Value,Standard Uncertainty,Distribution,Notes\n";
    reportData.typeB.forEach(item => {
      csvContent += `${item.source},${item.value.toFixed(4)},${item.u.toFixed(6)},${item.dist},"${item.notes}"\n`;
    });
    csvContent += `Combined Type B, ,${Math.sqrt(reportData.typeB.reduce((sum, item) => sum + Math.pow(item.u, 2), 0)).toFixed(6)}\n\n`;
    
    // Add combined uncertainty
    csvContent += "Combined Uncertainty\n";
    csvContent += `Standard Uncertainty (uc),${reportData.combined.uc.toFixed(6)}\n`;
    csvContent += `Expanded Uncertainty (k=2),${reportData.combined.uexp.toFixed(6)}\n`;
    csvContent += `Relative Uncertainty,${reportData.combined.urel.toFixed(2)}%\n\n`;
    
    // Add final result
    csvContent += "Final Result\n";
    csvContent += `Mean Value,${reportData.typeA.mean.toFixed(4)}\n`;
    csvContent += `Expanded Uncertainty,±${reportData.combined.uexp.toFixed(6)}\n`;
    csvContent += `Result,${reportData.typeA.mean.toFixed(4)} ± ${reportData.combined.uexp.toFixed(6)}\n\n`;
    
    // Add signatures
    csvContent += "Prepared by,Approved by\n";
    csvContent += `${reportData.preparedBy},${reportData.approvedBy}\n`;
    csvContent += `Date: ${reportData.date},Date: ${reportData.date}\n`;
    
    // Create download link
    const blob = new Blob([csvContent], { type: "text/csv;charset=utf-8;" });
    const url = URL.createObjectURL(blob);
    const link = document.createElement("a");
    link.setAttribute("href", url);
    link.setAttribute("download", `MU_Report_${reportData.parameter.replace(/ /g, "_")}_${reportData.date.replace(/\//g, "-")}.csv`);
    link.style.visibility = "hidden";
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
  }
</script>
</body>
</html>